{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  editUserInfo(name, description) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: description\n      })\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  sendNewCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  handleCardLike(cardId, isLiked) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: isLiked ? 'DELETE' : 'PUT',\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  changeAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      return this._getResponseData(res);\n    });\n  }\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n}\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-65',\n  headers: {\n    authorization: '23076075-9776-470a-ae27-dcd7a176dfd6',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","getInitialCards","fetch","method","then","res","_getResponseData","getUserInfo","editUserInfo","name","description","body","JSON","stringify","about","sendNewCard","link","handleCardLike","cardId","isLiked","changeAvatar","avatar","deleteCard","ok","Promise","reject","status","json","api","authorization"],"sources":["C:/Users/cloud/Desktop/praktikum/dev/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["class Api {\r\n    constructor(options) {\r\n        this._baseUrl = options.baseUrl;\r\n        this._headers = options.headers;\r\n    }\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        }).then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n    getUserInfo() {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: 'GET',\r\n            headers: this._headers\r\n        }).then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n    editUserInfo(name, description) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: description\r\n            })\r\n        }).then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n    sendNewCard(name, link) {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                link: link\r\n            })\r\n        }).then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n    handleCardLike(cardId, isLiked) {\r\n        return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n            method: isLiked ? 'DELETE' : 'PUT',\r\n            headers: this._headers\r\n        }).then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n    changeAvatar(link) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: link\r\n            })\r\n        }).then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        }).then(res => {\r\n            return this._getResponseData(res);\r\n        });\r\n    }\r\n    _getResponseData(res) {\r\n        if (!res.ok) {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n        return res.json();\r\n    }\r\n}\r\nexport const api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-65',\r\n    headers: {\r\n        authorization: '23076075-9776-470a-ae27-dcd7a176dfd6',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}